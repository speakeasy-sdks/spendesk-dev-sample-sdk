/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * `fxFee` refers to fees incurred by a payment in foreign currency,
 *
 * @remarks
 *  and `atmFee` refers to fees incurred at an atm, e.g. to withdraw cash.
 */
export enum Kind {
    FxFee = "fxFee",
    AtmFee = "atmFee",
    OtherFee = "otherFee",
}

export class BankFee extends SpeakeasyBase {
    /**
     * Amount of the fee, always in wallet currency.
     *
     * @remarks
     * Expressed in smallest units of the currency (e.g. cents for EUR and USD, but yen for JPY).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount: number;

    /**
     * Date and time the bank fee was incurred
     */
    @SpeakeasyMetadata()
    @Expose({ name: "chargedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    chargedAt: Date;

    /**
     * The date-time the bank fee got created in the system
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt: Date;

    /**
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency: string;

    /**
     * ID of bank fee
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * `fxFee` refers to fees incurred by a payment in foreign currency,
     *
     * @remarks
     *  and `atmFee` refers to fees incurred at an atm, e.g. to withdraw cash.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "kind" })
    kind: Kind;

    /**
     * The id of the Settlement related to this bank fee.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "settlementId" })
    settlementId: string;
}
