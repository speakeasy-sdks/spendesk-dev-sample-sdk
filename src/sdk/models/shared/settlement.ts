/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class SettlementLinks extends SpeakeasyBase {
    /**
     * Link to bank fees endpoint with the relevant `settlementId` query parameter
     */
    @SpeakeasyMetadata()
    @Expose({ name: "bankFees" })
    bankFees: string;
}

/**
 * Medium: `card` or `wireTransfer`
 */
export enum SettlementMedium {
    Card = "card",
    WireTransfer = "wireTransfer",
}

/**
 * The bank account the wire transfer is emitted from (Spendesk or external).
 *
 * @remarks
 * For card payments the value is always `spendeskAccount`
 */
export enum SettlementPaidFrom {
    SpendeskAccount = "spendeskAccount",
    ExternalAccount = "externalAccount",
}

/**
 * Status of the settlement:
 *
 * @remarks
 *
 * State | Description
 * ---------|----------
 *  `created` | Created but not exported
 *  `exported` | Exported
 *  `failedToExport` | Tried to export but failed
 *
 */
export enum SettlementState {
    Created = "created",
    Exported = "exported",
    FailedToExport = "failedToExport",
}

/**
 * Type | Description
 *
 * @remarks
 * ---------|----------
 *  `payment` |  A payment
 *  `refund` |  A refund
 *  `advance` | A cash advance
 *   `cashReturn` | A cash return
 *   `chargeBack` |  A card disputes/chargeback
 */
export enum SettlementType {
    Payment = "payment",
    Refund = "refund",
    Advance = "advance",
    CashReturn = "cashReturn",
    ChargeBack = "chargeBack",
    Reimbursement = "reimbursement",
}

export class Settlement extends SpeakeasyBase {
    /**
     * If the payment was made in a foreign currency, this amount is in the foreign currency.
     *
     * @remarks
     * Expressed in smallest units of the currency (e.g. cents for EUR and USD, but yen for JPY).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount: number;

    /**
     * Amount is in the account's currency.
     *
     * @remarks
     * Expressed in smallest units of the currency (e.g. cents for EUR and USD, but yen for JPY).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "billingAmount" })
    billingAmount: number;

    /**
     * Amount is in the account's currency.
     *
     * @remarks
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "billingCurrency" })
    billingCurrency: string;

    /**
     * If the payment was made in a foreign currency, this is the exchange rate between the two currencies at the time of the payment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "billingExchangeRate" })
    billingExchangeRate: number;

    /**
     * Date-time that the transaction cleared. [ISO 8601 date format](https://www.iso.org/iso-8601-date-and-time-format.html)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "clearedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    clearedAt: Date;

    /**
     * The date-time the settlement got created in the system
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt: Date;

    /**
     * If the payment was made in a foreign currency, this is the foreign currency.
     *
     * @remarks
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency: string;

    /**
     * Date-time settlement was exported at
     */
    @SpeakeasyMetadata()
    @Expose({ name: "exportedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    exportedAt: Date;

    /**
     * Settlement Id
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata({ elemType: SettlementLinks })
    @Expose({ name: "links" })
    @Type(() => SettlementLinks)
    links: SettlementLinks[];

    /**
     * Medium: `card` or `wireTransfer`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "medium" })
    medium: SettlementMedium;

    /**
     * The bank account the wire transfer is emitted from (Spendesk or external).
     *
     * @remarks
     * For card payments the value is always `spendeskAccount`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "paidFrom" })
    paidFrom: SettlementPaidFrom;

    /**
     * Status of the settlement:
     *
     * @remarks
     *
     * State | Description
     * ---------|----------
     *  `created` | Created but not exported
     *  `exported` | Exported
     *  `failedToExport` | Tried to export but failed
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "state" })
    state: SettlementState;

    /**
     * Description of transaction
     */
    @SpeakeasyMetadata()
    @Expose({ name: "transactionDescription" })
    transactionDescription: string;

    /**
     * Type | Description
     *
     * @remarks
     * ---------|----------
     *  `payment` |  A payment
     *  `refund` |  A refund
     *  `advance` | A cash advance
     *   `cashReturn` | A cash return
     *   `chargeBack` |  A card disputes/chargeback
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: SettlementType;
}
