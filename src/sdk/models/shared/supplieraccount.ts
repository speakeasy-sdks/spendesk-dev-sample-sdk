/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum SupplierAccountDefaultFor {
    Cards = "cards",
    Invoices = "invoices",
}

export class Suppliers extends SpeakeasyBase {
    /**
     * Supplier ID
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * Supplier name
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

export class SupplierAccount extends SpeakeasyBase {
    /**
     * Auxiliary account code (if exists)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "auxiliaryAccountCode" })
    auxiliaryAccountCode: string;

    /**
     * Supplier accounts can be set as deafult account payable for card purchases and/or for invoice
     */
    @SpeakeasyMetadata()
    @Expose({ name: "defaultFor" })
    defaultFor: SupplierAccountDefaultFor[];

    /**
     * Account code
     */
    @SpeakeasyMetadata()
    @Expose({ name: "generalAccountCode" })
    generalAccountCode: string;

    /**
     * Account ID
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * Accout name (if exists)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * Array of suppliers having this account assigned
     */
    @SpeakeasyMetadata({ elemType: Suppliers })
    @Expose({ name: "suppliers" })
    @Type(() => Suppliers)
    suppliers: Suppliers[];
}
